<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Matt Swanson's Blog</title>
 <link href="http://mdswanson.com/atom.xml" rel="self"/>
 <link href="http://mdswanson.com/"/>
 <updated>2017-09-04T11:33:32+00:00</updated>
 <id>http://mdswanson.com/</id>
 <author>
   <name>Matt Swanson</name>
   <email>matt@mdswanson.com</email>
   <url>mdswanson.com</url>
 </author>

 
 <entry>
   <title>Build a VM from Scratch</title>
   <link href="http://mdswanson.com/blog/2017/09/01/build-a-vm-from-scratch.html"/>
   <published>2017-09-01T11:11:11+00:00</published>
   <updated>2017-09-01T11:11:11+00:00</updated>
   <id>http://swanson.github.com/blog/2017/09/01/build-a-vm-from-scratch</id>
   <content type="html">&lt;h2 id=&quot;build-a-virtual-machine-from-scratch&quot;&gt;Build a Virtual Machine From Scratch&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Creating and Optimizing Virtual Machine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Virtual machine is a robust concept to achieve platform independent design for various platforms (operating system: windows, linux, mac). These programming languages are designed above the layer of core architecture (x86, x86_64) and rely on OS system calls. The code is compiled and interpreted to machine languages(binary language). Now, the question arises how this virtual machine attains platform independence for programming languages like Java. Lua and Python etc. Virtual Machines provides an abstraction layer for these programming languages. In any platform, these translators generates an intermediate code which is understandable by virtual machines and  designed for every platform.&lt;/p&gt;

&lt;h3 id=&quot;tools-required-to-build-a-virtual-machine&quot;&gt;Tools required to build a Virtual Machine&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;GCC/Clang, G++, GDB, CMAKE&lt;/li&gt;
  &lt;li&gt;Lex, YACC&lt;/li&gt;
  &lt;li&gt;Nano, VIM&lt;/li&gt;
  &lt;li&gt;Core-libs and Debugging Tool&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-you-should-write-a-virtual-machine&quot;&gt;Why you should write a Virtual Machine&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You want a deeper understanding of how a computer works. Low-level instructions executed on CPU(addressing modes).
So, to understand virtual machine, a better way is to build it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Learn how a programming language works, Its internal architecture. Moreover how to optimize a virtual machine (instruction and memory). JIT(Jist-In-Time compiler) is used in JVM, Python VM, and various other programming languages. And GC(Garbage Collector) to avoid memory leakages and a better way to organize main memory.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cpu-architecture&quot;&gt;CPU Architecture&lt;/h3&gt;

&lt;p&gt;The processor in a computer responsible for executing instruction and performing hardware interactions. The processor has a manual of Mnemonics(assembly language instruction) which wraps binary language instruction. The bandwidth of the processor decides the number of instruction is going to execute in a machine cycle. Which known as the frequency of the processor. The processor also contains General Purpose Register(GPR) like A,B,C,D,E.  These register stores information of various operation going to be performed in a next cycle. They also have special purpose registers like flags, DS, and various other segments to control instructions flow.&lt;/p&gt;

&lt;h3 id=&quot;stack-based-virtual-machine&quot;&gt;Stack based Virtual Machine&lt;/h3&gt;

&lt;p&gt;In the stack based virtual machine, which means it’s a stack which can perform operations like Push(insertion), Pop(deletion). These are simpler to implement than register based virtual machine.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Instruction&lt;/th&gt;
      &lt;th&gt;Meaning&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;PUSH 5&lt;/td&gt;
      &lt;td&gt;pushes 5 to stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PUSH 10&lt;/td&gt;
      &lt;td&gt;pushes 10 to stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADD&lt;/td&gt;
      &lt;td&gt;Pops 2 values from TOS, Adds them and Pushes Back to stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POP&lt;/td&gt;
      &lt;td&gt;Pops the Top element in stack and print it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SET A 0&lt;/td&gt;
      &lt;td&gt;Set A register to 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HALT&lt;/td&gt;
      &lt;td&gt;Stop the Program&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;instruction-cycle&quot;&gt;Instruction Cycle&lt;/h3&gt;
&lt;p&gt;Virtual machines are simpler than you might think. They follow a simple pattern, which is &lt;strong&gt;Instruction Cycle&lt;/strong&gt; Fetch, Decode and Execute. First, we fetch the next instruction list or code, we then decode that instruction and add to the instruction set and executes that instruction.&lt;/p&gt;

&lt;h3 id=&quot;makefile&quot;&gt;Makefile&lt;/h3&gt;
&lt;p&gt;Makefile is used to automate and resolve dependency for our project. C/C++ files need to be compiled each files compilation manually will take a long time and order of their compilation will be a memorize tasks. Makefile does these task with a configuration on various platforms. When Linux introduced software were written in such a way for years.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SRC_FILES = main.c
CC_FLAGS = -Wall -Wextra -g -std=c11
CC = clang

all:
   ${CC} ${SRC_FILES} ${CC_FLAGS} -o mac
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;program-instruction&quot;&gt;Program Instruction&lt;/h3&gt;

&lt;p&gt;We know the assembly instruction needs to be executed then simply put this instruction in enum so that they can be referenced easily.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;typedef enum {
   PSH,
   ADD,
   POP,
   SET,
   HLT
} InstructionSet;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, storing the actual instruction which is to be executed on the processor. Storing these instruction set in Array.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const int program[] = {
   PSH, 5,
   PSH, 6,
   ADD,
   POP,
   HLT
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Fetching the Current Instruction&lt;/strong&gt;
We have stored our instruction in an array. It will be easy to fetch instruction, but virtual machine also holds a variable to know the instruction executing known as a Program Counter(PC), Instruction Pointer(IP).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdbool.h&amp;gt;
#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;limits.h&amp;gt;
#include&amp;lt;math.h&amp;gt; 
#define sp (registers[SP])
#define ip (registers[IP])
bool running = true;
int IP = 0; 
int main() {
typedef enum {
PSH,
ADD,
POP,
SET,
HLT
} InstructionSet;
const int program[] = {
PSH, 5,
PSH, 6,
ADD,
POP,
HLT
};
typedef enum {
     A, B, C, D, E, F,
     NUM_OF_REGISTERS
} Registers; 
int registers[NUM_OF_REGISTERS];
  while (running) {
    eval(fetch()); // PSH
    if (x == HLT) running = false;
    IP++; // increment instruction pointer
}
// This will return the current instruction
int fetch() {
   return program[ip];
}
// Eval Function for HALT 
void eval(int instr) {
switch (instr) {
case HLT:
    running = false;
    break;
}  
case PSH: {
        sp++;
        stack[sp] = program[++ip];
        break;
}
case POP: {
// store the value at the stack in val_popped THEN decrement the stack ptr
int val_popped = stack[sp--];

// print it out!
printf(&quot;popped %d\n&quot;, val_popped);
break;
}
case ADD: {
// first we pop the stack and store it as 'a'
int a = stack[sp--];

// then we pop the top of the stack and store it as 'b'
int b = stack[sp--];

// we then add the result and push it to the stack
int result = b + a;
sp++; // increment stack pointer **before**
stack[sp] = result; // set the value to the top of the stack

// all done!
break;
}  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Execute&lt;/strong&gt;
Now save the above code snippet as main.c and run the make file using then command in the project directory
    make&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Understand user behavior using Firebase Analytics</title>
   <link href="http://mdswanson.com/blog/2017/08/11/firebase-analytic.html"/>
   <published>2017-08-11T00:00:00+00:00</published>
   <updated>2017-08-11T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/08/11/firebase-analytic</id>
   <content type="html">&lt;p&gt;Firebase Analytics is an analytics solution to help you gain insights on what users are doing with your app. It gives you many different reports(Active User, Cohort, etc.) and filters to help you understand how your app is progressing toward your goals. Analytics reports help you understand clearly how your users behave, which enables you to make informed decisions regarding app marketing and performance optimizations.&lt;/p&gt;

&lt;h3 id=&quot;key-feature-of-firebase-analytics&quot;&gt;Key Feature of Firebase Analytics&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Unlimited Reporting: Analytics provides unlimited reporting on up to 500 distinct events.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Audience Segmentation: Custom audiences can be defined in the Firebase console based on device data, custom events, or user properties. These audiences can be used with other Firebase features when targeting new features or notification messages.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dashboard&quot;&gt;Dashboard&lt;/h3&gt;

&lt;h4 id=&quot;active-users&quot;&gt;Active Users&lt;/h4&gt;
&lt;p&gt;Active users are plotted by time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Monthly:  The number of unique users who engaged with the app in the previous 30 days leading up to the last day of the date range.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Weekly: The number of unique users who engaged with the app in the previous 7 days leading up to the last day of the date range.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Daily: The number of unique users who engaged with the app on the last day of the date range.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;average-revenue&quot;&gt;Average revenue&lt;/h4&gt;
&lt;p&gt;Average revenue shows the &lt;code class=&quot;highlighter-rouge&quot;&gt;average revenue per user (ARPU)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;average revenue per paying user (ARPPU)&lt;/code&gt; for the monthly, weekly, daily active user. Revenue is the sum of ecommerce_purchase and in_app_purchase event value. ARPU is revenue divided by the total users for the given time periods. ARPPU is revenue divided by the users who have purchased during the given time periods.&lt;/p&gt;

&lt;h4 id=&quot;first_open-attribution&quot;&gt;first_open attribution&lt;/h4&gt;
&lt;p&gt;The number of times the app was opened after installing or re-installing it. &lt;code class=&quot;highlighter-rouge&quot;&gt;first_open&lt;/code&gt; attribution event is not raised when the user downloads the app from &lt;code class=&quot;highlighter-rouge&quot;&gt;Play store&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;iTunes&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;retention-cohort&quot;&gt;Retention cohort&lt;/h4&gt;
&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;cohort&lt;/code&gt; is a set of users who started using your app at the same time (such as on the same day, or during the same week). The bottom row represents the most recent cohort. The top row step represents the earliest cohort. Darker shading indicates that a higher percentage of users returned to use the app again. Over time, the shading becomes lighter as fewer users return to use the app.&lt;/p&gt;

&lt;h4 id=&quot;user-engagement&quot;&gt;User engagement&lt;/h4&gt;
&lt;p&gt;The percentage value represents the amount of increase or decrease and solid line in the graph shows engagement trends according to user engagement(Daily engagement, Daily engagement per user and Session per user) respectively.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Daily engagement: Sum of user engagement time for all users. The percentage value represents the amount of increase or decrease in user engagement. The solid line in the graph shows total daily engagement trends.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Daily engagement per user: Average engagement duration per user.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sessions per user: Total number of sessions divided by the number of active users.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;User engagement per screen: Analytics automatically tracks some information about screens in your application, such as the class name of the &lt;code class=&quot;highlighter-rouge&quot;&gt;UIViewController&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; that is currently in focus. When a screen transition occurs, Analytics logs a screen_view event that identifies the new the .&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;in-app-purchases&quot;&gt;In-App purchases&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Users : number and percentage of users who have completed in-app transactions (in_app_purchase).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Count : number of transactions, and percentage change from comparison period.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Value : revenue from transactions, and percentage change from comparison period.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;app-version&quot;&gt;App version&lt;/h4&gt;
&lt;p&gt;A number of the app user for top three version and other(which include the sum of all other versions).&lt;/p&gt;

&lt;h4 id=&quot;devices&quot;&gt;Devices&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Percentage of users on each of the top three device models and other(which include the sum of all other devices).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Percentage of users on each of the top two OS versions and other(which include the sum of all other OS version).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;location&quot;&gt;Location&lt;/h4&gt;
&lt;p&gt;Percentage of sessions from each of your top countries.&lt;/p&gt;

&lt;h4 id=&quot;demographics&quot;&gt;Demographics&lt;/h4&gt;
&lt;p&gt;Percentage of male and female users, by age group.&lt;/p&gt;

&lt;h4 id=&quot;interests&quot;&gt;Interests&lt;/h4&gt;
&lt;p&gt;Percentage of users in each interest group.&lt;/p&gt;

&lt;h3 id=&quot;events&quot;&gt;Events&lt;/h3&gt;
&lt;p&gt;Events show the list of events which triggered in app during the range(date range). An Event is an important occurrence in your app that you want to measure. You can report up to 500 different types of Events per app and you can associate up to 25 unique parameters with each Event type. Each event type is identified by a unique name. Event names can be up to 40 characters long, may only contain &lt;code class=&quot;highlighter-rouge&quot;&gt;alphanumeric characters&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;underscores&lt;/code&gt;, and must start with an &lt;code class=&quot;highlighter-rouge&quot;&gt;alphabetic character&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;firebase_&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;google_&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ga_&lt;/code&gt; prefixes are reserved and should not be used.&lt;/p&gt;

&lt;p&gt;Firebase provides the following metrics for each event:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Users: number of users who triggered the event.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Count per user: average number of times per user that the event was triggered.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Value: the sum of all VALUE parameters supplied with the event. Use this context-sensitive metric to track any data that is valuable to your app (e.g., revenue, time, distance).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some events that are automatically triggered for firebase for more information https://support.google.com/firebase/answer/6317485?hl=en. You can log events with the &lt;code class=&quot;highlighter-rouge&quot;&gt;logEvent()&lt;/code&gt; method.
The following example how to log a SELECT_CONTENT Event:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;undle bundle = new Bundle();
bundle.putString(FirebaseAnalytics.Param.ITEM_ID, id);
bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, name);
bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, &quot;image&quot;);
mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;firebase-audience&quot;&gt;Firebase Audience&lt;/h3&gt;

&lt;p&gt;You can combine events and user properties into Firebase audiences. You can perform deep analysis on each of your audiences.For example, you might want to look users from a specific interest who have reached a certain achievement level in your app.&lt;/p&gt;

&lt;p&gt;Use audiences to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Filter reports so you can analyze how different user segments engage with your app&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Target Notifications to individual audiences&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Target Remote Config to deliver custom experiences to different audiences&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To create a new audience:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In Firebase, click the Audiences tab.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click NEW AUDIENCE.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter a name and description for the audience. This name and description will allow you to identify the audience in the management table.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click Select Event or User Property.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create one or more conditions that define who should be included in this audience. You can create conditions that include the users who have taken specific actions(Event) or who share a property(User Property). Combine multiple conditions with OR or AND.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click Create to save your condition(s) and create the audience.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;p&gt;https://firebase.google.com/docs/analytics/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>AWS Cloud for SME Project</title>
   <link href="http://mdswanson.com/blog/2017/07/24/aws-cloud.html"/>
   <published>2017-07-24T00:00:00+00:00</published>
   <updated>2017-07-24T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/07/24/aws-cloud</id>
   <content type="html">&lt;h3 id=&quot;aws-cloud-for-sme-projects&quot;&gt;AWS Cloud for SME Projects&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon Web Services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS combines a large set of services for deploying Small-Medium-Enterprise(SME) Project. For computation a compute engine using virtualization technology to provision (virtual Machine)VM. Amazon EC2(Elastic Compute Cloud) handles computing services. Every service has a tight integration with Amazon Identity and Access Management(IAM). For networking, Amazon has VPC which provides an isolated virtual network for virtual servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Services&lt;/strong&gt;
The following are the key computing, networking, and storage services.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon EC2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provide virtual servers in the AWS Cloud.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon VPC&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;provides an isolated virtual network for virtual servers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Elastic Load Balancing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Distributes your network traffic across your set of virtual servers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Auto Scaling&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Automatically scales your set of virtual servers based on changes in demand.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon Route S3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Route traffic to your domain name to a resource, such as a virtual server or a load balancer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runs your code on a virtual server from Amazon EC2 in response to events.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon ECS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provide docker containers on virtual server from amazon EC2.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provides both object and block storage, Amazon simple storage service(S3) is elastic volume.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Amazon SES&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Provides SMTP server to route email using SMTP relay.&lt;/p&gt;

&lt;p&gt;**Key Concepts **&lt;/p&gt;

&lt;p&gt;The following are the concept you should understand before using this computing, networking and storage service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instance and AMI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An instance in cloud computing refers to Virtual Machine with computing resources(Like RAM, CPU). Creating an instance in Amazon EC2. Just select the EC2 and then create an instance, select your computing resources and from (Amazon Image Management)AMI select an OS image.&lt;/p&gt;

&lt;p&gt;These images are pre-configured OS. They come with already setup password and environment. In AMI(Amazon Image Management), you have the freedom to add your custom image and also create a snapshot of your running VM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/images/architecture_ami_instance.png&quot; alt=&quot;Amazon Instance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VPC and Subnets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A virtual private cloud (VPC) is a virtual network dedicated to your AWS account. It is logically isolated from other virtual networks in the AWS cloud, providing security and robust networking functionality for your computing resources. A VPC closely resembles a traditional network that you’d operate in your own data center, with the benefits of using the scalable infrastructure of AWS.&lt;/p&gt;

&lt;p&gt;A subnet is a segment of a VPC’s IP address range that you can launch instances into. Subnets enable you to group instances based on your security and operational needs. To enable instances in a subnet to reach the Internet and AWS services, you must add an Internet gateway to the VPC and a route table with a route to the Internet to the subnet.&lt;/p&gt;

&lt;p&gt;Amazon Security group act as a virtual firewall for your virtual machine to control inbound and outbound traffic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/images/security_group.png&quot; alt=&quot;VPC-subnet-with-security-group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Auto Scaling Groups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Auto Scaling supports groups of virtual servers, an Auto Scaling group that can grow or shrink on demand.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/images/auto_scaling_group.png&quot; alt=&quot;Auto Scaling&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load Balancer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A load balancer distributes traffic to multiple instances. You can achieve even higher levels of fault tolerance by using your load balancer with instances in multiple Availability Zones. As instances are launched and terminated, the load balancer automatically directs traffic to the running instances. Elastic Load Balancing also performs health checks on each instance. If an instance is not responding, the load balancer can automatically redirect traffic to the healthy instances. The load balancer also configured with traffic distribution algorithm.
&lt;img src=&quot;http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/images/load_balancer.png&quot; alt=&quot;Load Balancer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The following diagram shows an example architecture for your computing and networking services. There are EC2 instances in public and private subnets. Access to the instances in the public subnets over protocols like SSH or RDP is controlled by one or more security groups. Security groups also control whether the instances can talk to each other. The Auto Scaling group maintains a fleet of EC2 instances that can scale to handle the current load. This Auto Scaling group spans multiple Availability Zones to protect against the potential failure of a single Availability Zone. The load balancer distributes traffic evenly among the EC2 instances in the Auto Scaling group. When the Auto Scaling group launches or terminates instances based on load, the load balancer automatically adjusts accordingly. Amazon Route 53 provides secure and reliable routing of your domain name to your infrastructure hosted on AWS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/images/compute_architecture.png&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slack Deployment on AWS Cloud Architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d0.awsstatic.com/architecture-diagrams/customers/slack-arch-diagram.png&quot; alt=&quot;Slack AWS Arxhitecture&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>My Experiments with AngularJS</title>
   <link href="http://mdswanson.com/blog/2017/06/30/angular-js.html"/>
   <published>2017-06-30T00:00:00+00:00</published>
   <updated>2017-06-30T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/30/angular-js</id>
   <content type="html">&lt;p&gt;I have planned to start writing about AngularJS. I have begun to learn AngularJS a few months back, it’s a great framework for website UI developers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AngularJS version 1.0 was released in 2012.&lt;/li&gt;
  &lt;li&gt;Reference for Angular js Tutorial: W3Schools, Tutorialspoint and C# Corner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;angularjs-basics&quot;&gt;AngularJS Basics&lt;/h3&gt;

&lt;p&gt;AngularJS is a full featured JavaScript framework, with the core goal of simplification. It excels at building dynamic, single page web apps and supports the Model View Controller (MVC) programming structure. It powers sites include Google, Virgin America, and HBO’s mobile site for iPad. Other highlights:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open-source, front-end JavaScript framework developed by Google&lt;/li&gt;
  &lt;li&gt;Encourages the developer to use modular building blocks of JavaScript code that can be categorized and are easy to test&lt;/li&gt;
  &lt;li&gt;Can be added to any HTML page with a &lt;script&gt; tag&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tech-differentiators-of-angularjs-include&quot;&gt;Tech differentiators of AngularJS include:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Two-way data bindings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://docs.angularjs.org/img/Two_Way_Data_Binding.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Controllers&lt;/li&gt;
  &lt;li&gt;Expressions, which bind data to HTML&lt;/li&gt;
  &lt;li&gt;$Scope, a novel way of handling variable dependency and global variables&lt;/li&gt;
  &lt;li&gt;Directives, which extend HTML attributes. “Extending” is the key to how AngularJS works&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://qph.ec.quoracdn.net/main-qimg-e4fd26b9a1713b64a0f2915bc32527e6.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;why-to-use-angularjs&quot;&gt;Why to use AngularJS&lt;/h3&gt;

&lt;p&gt;AngularJS gives you everything you need to build the client-side of an application. It will also make it easier to keep your web project organized and modular to avoid repeating code. Advanced features like two-way data binding and dependency injection allow you to quickly create visually stunning and engaging applications that would otherwise take months of development time if you used vanilla JavaScript and jQuery.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;AngularJS is opinionated.&lt;/strong&gt; As a comprehensive client-side solution, AngularJS is naturally opinionated on how a CRUD application should be developed. That means there is definitely an “Angular” way of building a web project, and you’ll need to check with the development team as to whether AngularJS is a right fit for your project’s development workflow.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Not all projects require a framework as robust as AngularJS.&lt;/strong&gt; For simpler websites, there are lighter weight frameworks like Backbone.js that are better suited to the task.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Not suited for data intensive or tricky DOM manipulation.&lt;/strong&gt; AngularJS uses “dirty checking” when managing changes to the DOM—the AngularJS digest checks all variables watched by all $scopes for changes. Any value change among any of the variables forces an update of the DOM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;best-angularjs-world-known-applications-created&quot;&gt;Best AngularJS world known applications created:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;PayPal&lt;/li&gt;
  &lt;li&gt;Netflix&lt;/li&gt;
  &lt;li&gt;Weather&lt;/li&gt;
  &lt;li&gt;The Guardian&lt;/li&gt;
  &lt;li&gt;Lego&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;i-will-describe-the-components-of-angularjs-with-suitable-examples-&quot;&gt;I will describe the components of AngularJS with suitable examples-&lt;/h3&gt;

&lt;p&gt;AngularJS extends HTML with &lt;strong&gt;ng-directives&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ng-app&lt;/strong&gt; − This directive defines and links an AngularJS application to HTML.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ng-model&lt;/strong&gt; − This directive binds the values of AngularJS application data to HTML input controls.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;ng-bind&lt;/strong&gt; − This directive binds the AngularJS Application data to HTML tags.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 1 − Load framework&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 2 − Define AngularJS Application using ng-app directive&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div ng-app = &quot;&quot;&amp;gt;
  ...
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Step 3 − Define a model name using ng-model directive&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;Enter your Name: &amp;lt;input type = &quot;text&quot; ng-model = &quot;name&quot;&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4 − Bind the value of above model defined using ng-bind directive.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;Hello &amp;lt;span ng-bind = &quot;name&quot;&amp;gt;&amp;lt;/span&amp;gt;!&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;first-angularjs--application&quot;&gt;First AngularJS  Application&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;First AngularJS  App&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Sample Application&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

     &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Enter your Name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-model =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Hello &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-bind =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

     &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;

   &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;output&quot;&gt;OUTPUT&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://dotnetpattern.com/Images/AngularJS_Sample_Application_UI.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;everything-changes-with-angular-20&quot;&gt;EVERYTHING CHANGES WITH ANGULAR 2.0&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Angular 2 is based entirely on components&lt;/strong&gt;—say goodbye to $scope and controllers, and hello to @components, Angular’s latest take on the dependency injection model. A component is basically a directive with a template.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Streamlined directives&lt;/strong&gt;—Creating your own directives has gotten even easier with the new @Directive annotation, simply set your selector, properties, and host listeners.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ECMAScript 6 (ES6)&lt;/strong&gt;—Angular 2.0 supports the latest JavaScript standard.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Support for TypeScript&lt;/strong&gt;— great news for.NET developers, Microsoft’s open-source extension to ES6 will be supported by Angular 2. That means you get access to all the advantages, libraries, and technologies associated with TypeScript.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Semantic UI vs Bootstrap: A Comparison</title>
   <link href="http://mdswanson.com/blog/2017/06/30/SemanticUI-vs-Bootstrap.html"/>
   <published>2017-06-30T00:00:00+00:00</published>
   <updated>2017-06-30T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/30/SemanticUI-vs-Bootstrap</id>
   <content type="html">&lt;p&gt;Semantic is a UI development framework that helps to create stunning designs and responsive layouts using very friendly HTML. Similarly Bootstrap is the most popular framework for developing responsive and mobile based projects on the web. The journey of Bootstrap started 4 years ago and just now Bootstrap 3.3.4 was released. Whereas Semantic UI was released 2 years ago and its version 2.0 will be launching soon.&lt;/p&gt;

&lt;p&gt;I have used Bootstrap much more often than Semantic UI. That said, they both have UI Components that are unique to its framework and should be used based on what is needed by the designer.&lt;/p&gt;

&lt;p&gt;I, along with the vast majority of people I know who use a CSS framework, prefer Bootstrap as it’s more flexible in more areas.&lt;/p&gt;

&lt;h2 id=&quot;comparison-between-semantic-ui-and-bootstrap&quot;&gt;Comparison between Semantic UI and Bootstrap&lt;/h2&gt;

&lt;h6 id=&quot;so-which-is-the-best-one-to-use-in-semantic-ui-vs-bootstrap&quot;&gt;&lt;strong&gt;So which is the best one to use in Semantic UI vs Bootstrap?&lt;/strong&gt;&lt;/h6&gt;
&lt;h6 id=&quot;which-is-better-to-build-ui-semantic-ui-or-bootstrap&quot;&gt;&lt;strong&gt;Which is better to build UI, Semantic UI or Bootstrap?&lt;/strong&gt;&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt; has become one of the most popular front-end framework and open source projects in the world. In last release 3.3.4 versions Bootstrap focused on bug fixes and documentation improvements.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bootstrap offers both &lt;code class=&quot;highlighter-rouge&quot;&gt;LESS&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sass&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Semantic UI&lt;/strong&gt; enters as a rock star with 3000 theming variables, 50 UI components. In Semantic UI we can design websites quickly.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Semantic only offers &lt;code class=&quot;highlighter-rouge&quot;&gt;LESS&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Projects with Semantic UI framework are pretty awesome. Their basic idea of building a page in a strict semantic way is obviously good also designs are stunning there are a lot of components and settings to use or choose from the ready-made set. The whole package is very well organized, each component has its own style sheet and a script file that’s the reason you can load only if you want or load everything in a single page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now questions may be there regarding drawbacks of Semantic UI vs Bootstrap. Which is a good choice for business/ commercial projects?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The component design of Semantic UI is really amazing. But Semantic UI lacks behind Bootstrap in browser compatibility. Bootstrap is compatible with IE 7+ but Semantic UI compatible with IE 9+.&lt;/p&gt;

&lt;p&gt;According to my opinion I know each framework must have a fair amount of browser compatibility, but on the another side IE7 is 8 years old, it is behind 4 major versions. Even Google doesn’t officially support as it supports latest 3 versions. So Semantic UI is not supporting IE7+ is not a big issue at this moment.&lt;/p&gt;

&lt;p&gt;Semantic UI vs Bootstrap, I think I can’t see the major difference between Bootstrap and Semantic UI. Semantic UI design is better than Bootstrap, more clean, easy to use, strict coding, and useful components, lightweight. I can imagine the future of frameworks in Semantic UI as it is growing very fast. Right now Semantic UI is very good option for design layout so one can use Semantic UI as a parallel utility for designing layouts.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why Devops?</title>
   <link href="http://mdswanson.com/blog/2017/06/28/Why-Devops.html"/>
   <published>2017-06-28T00:00:00+00:00</published>
   <updated>2017-06-28T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/28/Why-Devops</id>
   <content type="html">&lt;h3 id=&quot;why-devops&quot;&gt;Why DevOps?&lt;/h3&gt;

&lt;p&gt;Software Development and Deployment are two different but major tasks which involve huge efforts from developers and IT Operation team.&lt;/p&gt;

&lt;p&gt;Every time a new build needs to be released code reviews and quality assurance need to happen. Also, Operation team needs to Deploy it in the production environment. Thus this process takes a lot of time until the Pipeline is completed and repeated on every new build.  So, DevOps generally include automated software integration, testing, deployments and infrastructure change management.&lt;/p&gt;

&lt;p&gt;It’s the main objective to build an environment where building, testing and releasing of the software can be done rapidly.&lt;/p&gt;

&lt;h3 id=&quot;ci-cd-pipeline&quot;&gt;CI-CD Pipeline&lt;/h3&gt;

&lt;p&gt;Now DevOps introduced a new methodology to increase cohesion and to reduce coupling (Best Practices in Software Development). A new term to improve the Development and Development Pipeline, CI/CD Application does that for your company. Continuous Integration majorly focuses on the build system. CI can build from Various Version Control System(VCS) like Github, Tortoise SVN and much more. Continuous Deployment takes care of Pre-Production or Stagging Server. You can execute scripts, run unit tests, resolve dependencies, tools, and libraries.&lt;/p&gt;

&lt;h3 id=&quot;configuration-management&quot;&gt;Configuration Management&lt;/h3&gt;

&lt;p&gt;The configuration management process identifies and tracks the individual CIs, their physical attributes and functional capabilities, and their interdependencies as related to the services they support throughout their operational life. Such information typically includes the versions and updates that have been applied to installed software packages, and the locations and network addresses of hardware devices. A technician can use a configuration management tool to review the entire collection of related systems, verifying the effect or effects of a change to one system on other systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt; Puppet, Chef, Ansible&lt;/p&gt;

&lt;h3 id=&quot;continous-monitoring&quot;&gt;Continous Monitoring&lt;/h3&gt;

&lt;p&gt;Quality is the main principle any service should be based on. Software development gains more and more popularity among services nowadays and quality of the product is usually the main point which guarantees the success of the project. A big number of developers can work on the project simultaneously and quality controlling and monitoring becomes a bigger challenge. One such challenge is to provide a comprehensive and brief visualisation of the progress of software development and the progress of quality assurance.
Continuous monitoring means that the specific software monitors work of the server in order to identify weaknesses, slow or failing components of the server, and informs a system administrator about any issue. A great server monitoring provides a detailed information on the health of the server as well as performance benchmarking, alerting capabilities, detailed reporting, data visualisation. Such statistic ensures smooth work of the server and respectively a flawless performance of the whole applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt; Nagios, Icinga, Cacti, OMD.&lt;/p&gt;

&lt;h3 id=&quot;10-opensource-devops-tools&quot;&gt;10 Opensource DevOps Tools:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Nagios (&amp;amp; Icinga)&lt;/li&gt;
  &lt;li&gt;Monit&lt;/li&gt;
  &lt;li&gt;ELK – Elasticsearch, Logstash, Kibana&lt;/li&gt;
  &lt;li&gt;Consul.io&lt;/li&gt;
  &lt;li&gt;Jenkins&lt;/li&gt;
  &lt;li&gt;Docker&lt;/li&gt;
  &lt;li&gt;Ansible&lt;/li&gt;
  &lt;li&gt;Collected/Collect&lt;/li&gt;
  &lt;li&gt;Git (GitHub)&lt;/li&gt;
  &lt;li&gt;Vagrant&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Standardizing PHP project scaffolding</title>
   <link href="http://mdswanson.com/blog/2017/06/28/project-scaffolding.html"/>
   <published>2017-06-28T00:00:00+00:00</published>
   <updated>2017-06-28T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/28/project-scaffolding</id>
   <content type="html">&lt;h2 id=&quot;project-scaffolding&quot;&gt;Project Scaffolding&lt;/h2&gt;
&lt;p&gt;Project Scaffolding provides you an ecosystem for Small to Large Teams working on a project. Here at CrownStack, we help you kickstart new projects, prescribing best practices and tools to stay productive. To Generate an ecosystem that puts Developers, System Administrator, and Functional teams in a roof, This Blog will tell you how to scaffold your whole project with few command execution. We know the importance of Scalability, High Availability, Resilient, Optimization factors.&lt;/p&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;
&lt;p&gt;1) &lt;a href=&quot;#step-involved-in-project-scaffolding&quot;&gt;Steps involved in Project Scaffolding&lt;/a&gt;
2) &lt;a href=&quot;#server-setup-and-configuration&quot;&gt;Server Setup and Configuration&lt;/a&gt;
3) &lt;a href=&quot;#docker-with-containerization&quot;&gt;Docker for Containerization&lt;/a&gt;
4) &lt;a href=&quot;#dependency-resolution-with-composer&quot;&gt;Dependency Resolution with Composer&lt;/a&gt;
5) &lt;a href=&quot;#setup-version-control-system&quot;&gt;Setup Version Control System&lt;/a&gt;
6) &lt;a href=&quot;#cicd=pipeline-with-jenkins&quot;&gt;CICD Pipeline with Jenkins&lt;/a&gt;
7) &lt;a href=&quot;#file-system-setup&quot;&gt;File System Setup&lt;/a&gt;
8) &lt;a href=&quot;#complete-documentation-and-test-report&quot;&gt;Complete Documentation and Test Report&lt;/a&gt;
9) &lt;a href=&quot;#create-workbook&quot;&gt;Create Workbook&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-involved-in-project-scaffolding&quot;&gt;Step Involved in Project Scaffolding&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;First step&lt;/strong&gt; towards project scaffolding is to setup Development, Staging(Testing or Pre-Production), Production Server. The best analogy to setup these server using Configuration Management Tool (Puppet, Chef, Salt, Ansible).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Second step&lt;/strong&gt; is to set up a Version Control System(VCS) like Github, Bitbucket, Tortoise svn. Create a repository and then create branches for production(Master Branch) and Development(develop Branch). From develop branch create sub-branches for developers to add new features and core libs. When a feature branch is merged in develop; the CI/CD Server will generate a build and will Run test cases, Linters and Coding Standard Sniffer. To validate, verify and deploy the project to the development server and when it is verified that the build is stable, we will move it to Staging sever.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Third Step&lt;/strong&gt; is to integrate a Service and Webhook with CI/CD Server. Go to Settings of our Github repository and integrate a service, Jenkins. And Create a Webhook with &lt;code class=&quot;highlighter-rouge&quot;&gt;http://IP:PORT/github-webhook&lt;/code&gt;. This will trigger build on push or pooling on develop branch.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Fourth Step&lt;/strong&gt; involves the Directory structure of your project.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://www.imageno.com/thumbs/20170622/mb1o7h3m4bhz.jpg&quot; alt=&quot;file System&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The Fifth Step needs to test your code and its standard. Also write unit test case relevant to your Programming Language. Postman Testcases(Collection URL), Report of project deployment and third-party libraries used.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Final Step&lt;/strong&gt; is to create a workbook for your project. Which means you need to cover every aspect of your project workflow and life cycle. A project workbook is a set of rule about how collaboration will unfold, how coding standard will be maintained and various other aspect of software development which are relevant to current project.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;server-setup-and-configuration&quot;&gt;Server Setup and Configuration&lt;/h3&gt;

&lt;p&gt;You need to setup Development, Staging, Production server. These servers have different roles in software development.
Provisioning server on the cloud is effective as you can scale up and down depends on the resource usage. There are various companies providing reliable web services like AWS(Amazon Web Services), GCP(Google Compute Engine), Windows Azure. You can provision server manually as well as automatically using SDK(Software Development Kit).&lt;/p&gt;

&lt;p&gt;Install Puppet to install and configure tools required to run your project. We have Puppet Master which will install packages as requested. We have grouped the packages. Find the suitable script and install it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum install puppet (For RHEL &amp;amp; CentOS)
or
apt-get install puppet (For Ubuntu and Debian)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next, you need to execute puppet for installing packages from Puppet master.&lt;/p&gt;

&lt;h3 id=&quot;docker-for-containerization&quot;&gt;Docker for Containerization&lt;/h3&gt;

&lt;p&gt;Continuous integration and continuous deployment (CI/CD) are some of the most common, but impactful use cases for teams who are looking to Dockerize their environment. The key to CI/CD is being able to automate the workflow, while still keeping the necessary features in place (like performing tests and leveraging staging environments) to assure the quality of your applications.
&lt;img src=&quot;http://img.scoop.it/b6ZmkdGnwN24jGgg74YfjLnTzqrqzN7Y9aBZTaXoQ8Q=&quot; alt=&quot;Image Credit Docker.coom&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Image Credit: Docker.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;dependency-resolution-with-composer&quot;&gt;Dependency Resolution with Composer&lt;/h3&gt;

&lt;p&gt;Managing your dependencies manually in any programming language is a huge pain. This is why in most programming languages today you will find that they all have some implementation of a dependency management system or sometimes a package manager. The composer is the dependency management system that you will find on most modern PHP projects.
The composer is not a package manager. It deals with packages but in a “per project” way. While it provides a global installation option, it does not install anything globally by default.
Essentially, Composer allows you to declare and manage every dependency of your PHP projects.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The CodeIgniter framework&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;codeigniter/framework&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;homepage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://codeigniter.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;support&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;forum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://forum.codeigniter.com/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;wiki&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/bcit-ci/CodeIgniter/wiki&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;irc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;irc://irc.freenode.net/codeigniter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/bcit-ci/CodeIgniter&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;=5.2.4&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;suggest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;paragonie/random_compat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Provides better randomness in PHP 5.x&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;require-dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mikey179/vfsStream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.1.\*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;phpunit/phpunit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.* || 5.\*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;setup-version-control-system&quot;&gt;Setup Version Control System&lt;/h3&gt;

&lt;p&gt;Version control systems are a category of software tools that help a software team manage changes to source code over time. Version control software keeps track of every modification to the code in a special kind of database. If a mistake is made, developers can turn back the clock and compare earlier versions of the code to help fix the mistake while minimizing disruption to all team members.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&quot;&gt;Find more on Local VCS, Centralized VCS, Distributed VCS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows&quot;&gt;Understand Git Workflows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To Learn Git, The best way is to use the manual of Git from Command Line.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is open the HTML page for Git branch. It contains all flags with description and tries out those commands, Learning by Doing.&lt;/p&gt;

&lt;h3 id=&quot;cicd-pipeline-with-jenkins&quot;&gt;CICD Pipeline with Jenkins&lt;/h3&gt;

&lt;p&gt;Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks such as building, testing, and deploying software. Jenkins can be installed through native system packages, Docker, or even run standalone by any machine with the Java Runtime Environment installed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://techbeacon.com/beginners-guide-kick-starting-your-ci-pipeline-jenkins&quot;&gt;Read Continuous Integration with Jenkins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dzone.com/refcardz/continuous-delivery-with-jenkins-workflow&quot;&gt;Read Continuous Delivery with Jenkins Workflow&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;filesystem-setup&quot;&gt;FileSystem Setup&lt;/h3&gt;

&lt;p&gt;File System plays a major role in managing your code and building scalable projects. Read CodeIngiter HMVC design pattern to know the importance of Hierarchical Model view Controller uses Filesystem to organize code.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Gautam-S04/CodeIgniter-Playbook/wiki/HMVC-Extension-for-CodeIgniter&quot;&gt;Read CodeIngiter Playbook HMVC &lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;complete-documentation-and-test-report&quot;&gt;Complete Documentation and Test Report&lt;/h3&gt;

&lt;p&gt;You need to follow OpenAPI specification while writing Docs in your Code. Documentation will be created from your code. And Then you can use any tool like Swagger, Postman and Other to give a View to your API Specification.
Write Unit test cases for your feature branch. Each developer is responsible for its test case. Also, you need to commit your code with a relevant message. From your commits changelog will be generated.&lt;/p&gt;

&lt;p&gt;You Need Not to install swagger and configure it. Put in the directory and do all those extra stuff. You need to specify it in Puppet script. And Puppet will take care of install and configure those setups.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification&quot;&gt;Read OpenAPI Specification&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;create-workbook&quot;&gt;Create Workbook&lt;/h3&gt;

&lt;p&gt;You need to put details in the workbook of each stage involved in Project Life Cycle.&lt;/p&gt;

&lt;p&gt;To Understand how project lifecycle works:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smartsheet.com/demystifying-5-phases-project-management-b&quot;&gt;Read Demystifying the 5  Phases of Project Management&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Building offline capabilities with Firebase Realtime Database</title>
   <link href="http://mdswanson.com/blog/2017/06/24/firebase-database.html"/>
   <published>2017-06-24T00:00:00+00:00</published>
   <updated>2017-06-24T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/24/firebase-database</id>
   <content type="html">&lt;p&gt;Realtime Database is one of the most important features of App development nowadays. It is required to handle data synchronization between client and server. It’s challenging to create a mobile app that allows the user to access data from any device. We need to create API or web services to handle this. All of these challenges can be fulfilled by using &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Realtime Database&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;firebase-realtime-database&quot;&gt;Firebase Realtime Database&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Realtime Database&lt;/code&gt; is cloud hosted NoSQL(Non-Relational) database. It stores data in JSON form(not in tabular form). It’s called Realtime due to synchronizing in real-time to all connected devices. All platforms app share one database instance and automatically receives updates with latest data. &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Realtime Database&lt;/code&gt; allows nesting data up to 32 levels deep. The developer can allow automatically database backup also.&lt;/p&gt;

&lt;h3 id=&quot;key-feature-of-firebase-realtime-database&quot;&gt;Key Feature of Firebase Realtime Database&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Realtime: Despite typical HTTP requests, the &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Realtime Database&lt;/code&gt; uses data synchronization—every time data changes, all connected device receives that update within milliseconds.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Offline: Firebase apps remain responsive even when offline because the Firebase Realtime Database SDK persists your data to disk. Once connectivity is reestablished, the client device receives any changes it missed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Accessible from Client Devices: Firebase Database can access directly from any client device. There is no need for any server.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rules&quot;&gt;Rules&lt;/h3&gt;

&lt;p&gt;The Realtime Database API is designed to only allow operations that can be executed quickly. Firebase Database Rules defines which user can read or write to the database. These rules are automatically applied to all query automatically. By default, rules are set to allow only authenticated users full read and write access to the database. There is four rule type for firebase.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;read: allow the user to read.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;write: allow the user to write.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;validate: allows you to apply validation logic using the same expressions used for .read and .write rules.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;indexOn: to specify ordering and querying data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enable-offline-capabilities&quot;&gt;Enable Offline Capabilities&lt;/h3&gt;

&lt;p&gt;Firebase app automatically handles the temporary network issue. Firebase uses cached data for better user experiences. It persists user data to disk. Cached data is available while offline.
Developer can enable disk persistence with just one line of code.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FirebaseDatabase.getInstance().setPersistenceEnabled(true);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;performaning-firebase-realtime-database-operations&quot;&gt;Performaning Firebase Realtime Database Operations&lt;/h3&gt;

&lt;p&gt;This is my firebase database structure.
&lt;img src=&quot;/static/firebase_database.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To perform any operations on database, developer needs to get the reference of database&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private DatabaseReference mDatabase;
mDatabase = FirebaseDatabase.getInstance().getReference();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;It returns the reference of top node. If developer needs the reference of a perticular node then developer have to pass the node . The below code will return the reference of  &lt;code class=&quot;highlighter-rouge&quot;&gt;chat&lt;/code&gt; node.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mDatabase = FirebaseDatabase.getInstance().getReference(&quot;chat&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;write-data-to-firebase&quot;&gt;Write Data to Firebase&lt;/h4&gt;

&lt;p&gt;We will store the chat object to the database. For this first, we have to create a chat model class.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class ChatDTO {

    private String id;
    private String userName;
    private String message;

    public ChatDTO() {
    }

    public ChatDTO(String id, String userName, String message) {
        this.id = id;
        this.userName = userName;
        this.message = message;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As every chat needs a unique Id, you can generate one by calling push() method which creates an empty node with a unique key. Then get the reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;chat&lt;/code&gt; node using child() method. Then use &lt;code class=&quot;highlighter-rouge&quot;&gt;setValue()&lt;/code&gt; method to store the chat data. By the below code a new chat object is stored with unique key value.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String id = mDatabaseReference.push().getKey();
ChatDTO chatDTO = new ChatDTO(id, name, message);
mDatabaseReference.child(id).setValue(chatDTO);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;read-data-from-firebase&quot;&gt;Read Data from Firebase&lt;/h4&gt;

&lt;p&gt;To read the data, you need to attach the &lt;code class=&quot;highlighter-rouge&quot;&gt;ValueEventListener()&lt;/code&gt; to the database reference. This event will be triggered whenever there is a change in data in real-time. In &lt;code class=&quot;highlighter-rouge&quot;&gt;onDataChange()&lt;/code&gt; you can perform the desired operations onto new data.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mDatabaseReference.addValueEventListener(valueEventListener);
ValueEventListener valueEventListener = new ValueEventListener() {
        @Override
        public void onDataChange(DataSnapshot dataSnapshot) {
          mChatDTOs.clear();
          Iterable&amp;lt;DataSnapshot&amp;gt; children =  dataSnapshot.getChildren();
            for (DataSnapshot snapShot : children){
                ChatDTO chatDTO =  snapShot.getValue(ChatDTO.class);
            }
        }

        @Override
        public void onCancelled(DatabaseError databaseError) {
            Log.e(&quot;error&quot;, databaseError.getMessage());
        }
    };
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;update-data-form-firebase&quot;&gt;Update Data form Firebase&lt;/h4&gt;

&lt;p&gt;To update data, you can use the same &lt;code class=&quot;highlighter-rouge&quot;&gt;setValue()&lt;/code&gt; method by passing new value. You can also use &lt;code class=&quot;highlighter-rouge&quot;&gt;updateChildren()&lt;/code&gt; by passing the path to update data without disturbing other child nodes data.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mDatabaseReference.child(id).child(&quot;userName&quot;).setValue(newUserName);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;where id is the node which have to update.&lt;/p&gt;

&lt;h3 id=&quot;delete-data-form-firebase&quot;&gt;Delete Data form Firebase&lt;/h3&gt;

&lt;p&gt;To delete data, you can simply call &lt;code class=&quot;highlighter-rouge&quot;&gt;removeValue()&lt;/code&gt; method on to database reference. You can also pass null to &lt;code class=&quot;highlighter-rouge&quot;&gt;setValue()&lt;/code&gt; method which does the same delete operation.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mDatabaseReference.child(id).setValue(null);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; is the node which has to be deleted.&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;p&gt;https://firebase.googleblog.com/2016/07/have-you-met-realtime-database.html&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Building better apps with Firebase Crash Reporting</title>
   <link href="http://mdswanson.com/blog/2017/06/12/firebase-crash-report.html"/>
   <published>2017-06-12T00:00:00+00:00</published>
   <updated>2017-06-12T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/06/12/firebase-crash-report</id>
   <content type="html">&lt;p&gt;Crash Reporting is an important feature nowadays. It is used to know that when your app gets crashed and which type of error occurred. There are many tools such as Acra, Sentry, etc. &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Crash Reporting&lt;/code&gt; is one of them.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Crash Reporting&lt;/code&gt; generate detail error report of application which takes few minutes(about 20 minutes according to the Firebase docs), to appear on Crash Reporting console. Also, it is super easy to integrate.&lt;/p&gt;

&lt;h2 id=&quot;improve-application-by-firebase-crash-report&quot;&gt;Improve application by Firebase Crash Report&lt;/h2&gt;

&lt;p&gt;A good application has few crashes. It’s hard to find all crash in the application while testing. There might be many undiscovered crashes during testing phase. Use of &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Crash Reporting&lt;/code&gt; to track crashes in application is recommended and whenever a crash occurs it sends the crash report on firebase and notified developer on his/her emailId. It helps me to solve those crashes and making application crash free.&lt;/p&gt;

&lt;h2 id=&quot;exploring-crash-report&quot;&gt;Exploring Crash Report&lt;/h2&gt;

&lt;p&gt;following are the few items which firebase provides.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Instances&lt;/code&gt; number of errors occurred.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Users impacted&lt;/code&gt; number of users who experienced an error.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Issues&lt;/code&gt; number of Issues. Group of exception with similar stack trace known as &lt;code class=&quot;highlighter-rouge&quot;&gt;Cluster&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Error-free users&lt;/code&gt; user percent who haven’t encounter an error.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Versions&lt;/code&gt; version of the app on which crash occurred.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Stack trace&lt;/code&gt; abbreviated version of the stack trace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/firebase_crash_report.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Provide additional data such as user location, network provider, device detail and performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/firebase_crash_report_additional_data.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;analytics-events-in-crash-logs&quot;&gt;Analytics events in Crash Logs&lt;/h2&gt;

&lt;p&gt;Firebase Analytics events are now added to your crash logs, which gives you a complete view of the state of your app leading up to crash.&lt;/p&gt;

&lt;h2 id=&quot;additional-feature&quot;&gt;Additional feature&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Can send the custom crash log to Firebase console.&lt;/li&gt;
  &lt;li&gt;Can get an email alert for the crash.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase Crash Reporting&lt;/code&gt; is one of the most important tools of &lt;code class=&quot;highlighter-rouge&quot;&gt;Firebase&lt;/code&gt; to make your app better and crash free. We are using it in many applications we are working on.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The mythical man month</title>
   <link href="http://mdswanson.com/writeup/2017/06/07/the-mythical-man-month.html"/>
   <published>2017-06-07T00:00:00+00:00</published>
   <updated>2017-06-07T00:00:00+00:00</updated>
   <id>http://swanson.github.com/writeup/2017/06/07/the-mythical-man-month</id>
   <content type="html">&lt;h2 id=&quot;1-a-tar-pit&quot;&gt;1. A Tar Pit&lt;/h2&gt;

&lt;p&gt;This one particular book is very popular among programmers and managers. This week I got the chance to read it. The book has a vivid start, comparing large software programming projects to tar pit and the struggles to make project successful are similar to winning a fight with the pit. On the opposite side, the pleasure of making useful programming systems is also compared to the child’s first clay pencil holder “for Daddy’s office”, the innate human desire to create new things.&lt;/p&gt;

&lt;p&gt;What interesting is, dividing the software craftsmanship into four categories. Now, this following categorization changed the way I look at software development and how I estimate them.&lt;/p&gt;

&lt;h3 id=&quot;11-a-program&quot;&gt;1.1 A Program&lt;/h3&gt;

&lt;p&gt;A program when complete in itself is ready to be run by the author on the system on which it was developed. This is what people generally use to estimate work and measure productivity.&lt;/p&gt;

&lt;h3 id=&quot;12-a-programming-product&quot;&gt;1.2 A programming product&lt;/h3&gt;

&lt;p&gt;The is a program which can be tested, repaired and extended by anybody. This generally needs three times more work than creating a program. For this substantial numbers of test cases needs to be written, input needs to be generalized. Input range and boundaries need to be decided and most importantly a proper documentation needs to be written and maintained.&lt;/p&gt;

&lt;h3 id=&quot;13-a-programming-system&quot;&gt;1.3 A programming system&lt;/h3&gt;

&lt;p&gt;A programming system is generally a combination of many programming products and it has additional complexity of managing the interface between various programming products. Again, as a rule of thumb, a programming system is three times more costly than the combination of all its programming products.&lt;/p&gt;

&lt;h3 id=&quot;14-a-programming-system-product&quot;&gt;1.4 A programming system product&lt;/h3&gt;

&lt;p&gt;This is truly a usable product, a combination of all of the above. It might cost nine times as much but this is the end goal of almost all large software products.&lt;/p&gt;

&lt;h3 id=&quot;the-woes-of-software-craftsmanship&quot;&gt;The woes of software craftsmanship&lt;/h3&gt;

&lt;p&gt;The author sites some woes inherent to software Programming. First, the necessity to produce perfect systems which are quite opposite to human nature; Second, too many dependencies on other human beings which generally ends in poor documentations and implementations; delayed and incomplete deliveries. Third, the absence of absolute frozen requirements and end goals, as soon as you freeze something, the requirements and technology supporting it go under a transformation.&lt;/p&gt;

&lt;p&gt;There is also a general rule of thumb for estimating time required for a software project&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1/3 Planning&lt;/li&gt;
  &lt;li&gt;1/6 Coding&lt;/li&gt;
  &lt;li&gt;1/4 Early System tests&lt;/li&gt;
  &lt;li&gt;1/4 Full system tests, All components in hand.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-the-surgical-team&quot;&gt;2. The Surgical team&lt;/h2&gt;

&lt;p&gt;This chapter handles how a large team can be managed by dividing workforce into a small group of 10-15 people and structuring it as a surgical team.&lt;/p&gt;

&lt;p&gt;This surgical team has a chief surgeon, a co-pilot, programming clerk, toolsmith, tester, language lawyer and support staff as Admins, Editors. This idea can be scaled to organize a large workforce.&lt;/p&gt;

&lt;h2 id=&quot;3-lesson-learned-from-tower-of-babel-fiasco&quot;&gt;3. Lesson Learned from Tower of Babel fiasco.&lt;/h2&gt;

&lt;p&gt;The author uses an example of Tower of Babel, examines this engineering fiasco and tries to learn few lessons from it. Communication he says is one of the major reason many projects fails. It is also a double-edged sword, too many of it and you are wasting too much time and lesser the number equally greater the risks.&lt;/p&gt;

&lt;p&gt;The author suggests that a project workbook can help to minimise the risk. An updated workbook can work as a lighthouse. Also, one more interesting argument he puts forward is that a programmer works better if he/she is shielded from the unnecessary documentation. Therefore work for an individual should be clearly defined.&lt;/p&gt;

&lt;h2 id=&quot;4-documentations-for-a-software-project&quot;&gt;4. Documentations for a Software Project&lt;/h2&gt;

&lt;p&gt;Here are the following documents every project manager should have at its disposal&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What: Objectives (Scope of Work)&lt;/li&gt;
  &lt;li&gt;What: Project Specifications&lt;/li&gt;
  &lt;li&gt;When: Schedule&lt;/li&gt;
  &lt;li&gt;How Much: Budget&lt;/li&gt;
  &lt;li&gt;Who: Organization Chart&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-planning-for-change&quot;&gt;5. Planning for change&lt;/h2&gt;

&lt;p&gt;Everyone knows that the only constant thing is change and this is especially true in software development where most of the managers blame requirement changes for missed deadlines. Now careful modularization, Precise and complete definition of interfaces are the obvious steps taken to handle this situation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The total cost of maintaining a widely used program is typically 40 percent or more of the cost of developing it. Also, the fundamental problem with program maintenance is that fixing a defect has substantial (20-25%) chance of introducing other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-documentations&quot;&gt;6. Documentations&lt;/h2&gt;

&lt;p&gt;This is one part of the software engineering which is generally overlooked and there are a number of reasons behind it. Generally, people think it is either boring or it is not what a developer needs to do. Also, since requirement and hence implementations are tentative why make documentations. This, of course, is a dangerous thing to follow.&lt;/p&gt;

&lt;p&gt;Documentation should be precise, regularly updated. If possible they should be automated.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Art of Programming</title>
   <link href="http://mdswanson.com/blog/2017/05/03/art-of-programming.html"/>
   <published>2017-05-03T00:00:00+00:00</published>
   <updated>2017-05-03T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/05/03/art-of-programming</id>
   <content type="html">&lt;p&gt;Programming is an art in which a person gets better with time and experience. A developer who is just starting his career has lot of things to learn and the first step is writing a well structured, consistent and beautiful code which follow basic principles like &lt;code class=&quot;highlighter-rouge&quot;&gt;DRY&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Boy Scout rule&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;well-structured-code&quot;&gt;Well Structured code&lt;/h3&gt;

&lt;p&gt;Well structured code improves quality, clarity and reduces development time. Dividing code base into Model-View-Controller (if you are using MVC), grouping classes based on their functions (for example, putting network layer/databases classes in one package), writing similar functions together in class, keeping their order according to their workflow and keeping them small, each performing one single task; these are the things a developer need to keep in mind while structuring a code base.&lt;/p&gt;

&lt;h3 id=&quot;consistency&quot;&gt;Consistency&lt;/h3&gt;

&lt;p&gt;Consistent code always makes legacy code easy to work with which in turns reduces development cost and makes it easy to find bugs.
Consistency can be achieved by adopting lets say, a common code style guide, consistent naming convention and following industry standards.&lt;/p&gt;

&lt;p&gt;Naming is one the hardest problem in computer science and it takes years to master this craft. A function’s name should explain its intent or class name should reveal its use.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating a custom easing function.</title>
   <link href="http://mdswanson.com/blog/2017/01/25/media-timing-function.html"/>
   <published>2017-01-25T00:00:00+00:00</published>
   <updated>2017-01-25T00:00:00+00:00</updated>
   <id>http://swanson.github.com/blog/2017/01/25/media-timing-function</id>
   <content type="html">&lt;p&gt;No one can deny the importance of animation in iOS. The way they enhance the UI/UX experience is unparalleled in handheld devices. If you are an iOS developer, i am pretty sure you must have used animations at least once which also makes me assume that you are familiar with &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; gives a real world feel to your animations. For example in real life if you throw a ball it bounces, loses its speed and comes to rest after deceleration. All of this can be explained with laws of physics and can be mimicked in animations with easing functions.&lt;/p&gt;

&lt;p&gt;Lets examine the &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; and try to create some custom easing functions.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; can be created using initializers
&lt;code class=&quot;highlighter-rouge&quot;&gt;- init(name: String)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;- init(controlPoints: Float, Float, Float, Float)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The interesting one is &lt;code class=&quot;highlighter-rouge&quot;&gt;init(controlPoints: Float, Float, Float, Float)&lt;/code&gt; which takes four float parameters. The fact is &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; is created using &lt;a href=&quot;https://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;cubic–bezier curve&lt;/a&gt; which is quite commonly used in digital drawing tools. It needs four Points to draw a curve. How the actual drawing takes place is not in the scope of this article, also there are plenty of tutorials and videos available to explain this.&lt;/p&gt;

&lt;p&gt;Now among these 4 points one is starting point, one is end point and rest two are called control points which are responsible for the curvature of curve. In case of &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; start Point and end points are fixed i.e [(0,0), (1, 1)]. Now we need two control points to draw an easing function, which is exactly what &lt;code class=&quot;highlighter-rouge&quot;&gt;- init(controlPoints: Float, Float, Float, Float)&lt;/code&gt; asking you to provide. So if we create &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;CAMediaTimingFunction(controlPoints: x1, y1, x2, y2)&lt;/code&gt; we have required four points to create the cubic–bezier curve, which are [(0, 0), (x1, y1), (x2, y2), (1, 1)].&lt;/p&gt;

&lt;p&gt;It is no surprise that default timing functions &lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionLinear&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionEaseIn&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionEaseOut&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionEaseInEaseOut&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionDefault&lt;/code&gt; are also created using these four points.&lt;/p&gt;

&lt;p&gt;Lets try to find out what these control points are.&lt;/p&gt;

&lt;h2 id=&quot;control-points-of-default-easing-functions&quot;&gt;Control points of default easing functions.&lt;/h2&gt;

&lt;p&gt;Run following code in playground&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/829dfdb8ab804196520081806f7dac50.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;This code just gets the start/end points and control points and prints them in console. You will see following log printed in playground.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;linear
(0.00, 0.00)
(0.00, 0.00)
(1.00, 1.00)
(1.00, 1.00)

easeIn
(0.00, 0.00)
(0.42, 0.00)
(1.00, 1.00)
(1.00, 1.00)

easeOut
(0.00, 0.00)
(0.00, 0.00)
(0.58, 1.00)
(1.00, 1.00)

easeInEaseOut
(0.00, 0.00)
(0.42, 0.00)
(0.58, 1.00)
(1.00, 1.00)

default
(0.00, 0.00)
(0.25, 0.10)
(0.25, 1.00)
(1.00, 1.00)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Please notice that start point and end point are same for every function while control points define the behavior of the function.&lt;/p&gt;

&lt;h2 id=&quot;plotting-the-curve&quot;&gt;Plotting the curve.&lt;/h2&gt;

&lt;p&gt;Lets try to plot all these function to examine how they look like.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c4c32498d215e407770be8ed7151550a.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;The above code snippet creates a class &lt;code class=&quot;highlighter-rouge&quot;&gt;EasingFunctionGraph&lt;/code&gt; which plots the function curve given the control points.&lt;/p&gt;

&lt;p&gt;Please notice that in &lt;code class=&quot;highlighter-rouge&quot;&gt;let firstLine = EasingFunctionGraph(x1: 0.25, y1: 0.1, x2: 0.25, y2: 1.0)&lt;/code&gt; we have passed the control points for &lt;code class=&quot;highlighter-rouge&quot;&gt;kCAMediaTimingFunctionDefault&lt;/code&gt; which we got above. You will see following curve plotted in playground live view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/default-plot.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets try &lt;code class=&quot;highlighter-rouge&quot;&gt;easeInEaseOut&lt;/code&gt; curve with &lt;code class=&quot;highlighter-rouge&quot;&gt;let firstLine = EasingFunctionGraph(x1: 0.42, y1: 0.0, x2: 0.58, y2: 1.0)&lt;/code&gt;. You will see following curve plotted in playground live view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/ease-in-ease-out.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is fun. Now we can try custom values for control points and see how this curve behaves.&lt;/p&gt;

&lt;p&gt;Actually we can create a lot of custom curves like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/all-curves.png&quot; alt=&quot;Drawing&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a good cheat sheet available &lt;a href=&quot;http://easings.net/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lets create an extension using above cheat sheet&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/f91dfc1360a9c3a755d74f91c03fd30c.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Although we can not create damping or oscillation curve with these but these additional curves are also awesome.&lt;/p&gt;

&lt;p&gt;Happy Coding.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unit Testing</title>
   <link href="http://mdswanson.com/blog/2016/11/16/Unit-Testing.html"/>
   <published>2016-11-16T11:11:11+00:00</published>
   <updated>2016-11-16T11:11:11+00:00</updated>
   <id>http://swanson.github.com/blog/2016/11/16/Unit-Testing</id>
   <content type="html">&lt;p&gt;Unit Testing is one of those topics which get discussed a lot and everyone says that we must use it but in fact truth is, in real world you find lot of things which push you away from Unit Testing, Here is my personal experience with Unit Testing and factor affecting it and lessons learned.&lt;/p&gt;

&lt;p&gt;When we started a brand new project, just like other law abiding citizen of programming world, we decided that this time we are going to do it in a perfect way.
We agreed to create proper documentations, write unit tests, write down the code style guides, follow agile, use standard git work flow and all those other things which we thought are going to make this project easy to work with, collaborate and scale.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This project was an iOS app and i am going to discuss only aspect i.e Unit Testing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the beginning everything was working smoothly and we were happy that we spent some time initially to finalize the way we want to work but as we moved forward on time scale we began to saw faults in our ideal approach.&lt;/p&gt;

&lt;p&gt;As the time passed and we delivered initial builds to client they came up with changes; now since this is normal and we were prepared for this, but the frequent changes were having an adverse effect on our speed and we found developers began complaining about Unit Test in sprint retrospective while we were missing deadlines frequently. The same old argument &lt;strong&gt;“It slows us down”.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In project retrospective we also found that we were being overly obsessed with code coverage and the percentage &lt;strong&gt;code coverage was being considered as a parameter to judge code quality.&lt;/strong&gt; We also figured out the we could have done fairly well if we skipped few parts of the code. Also we had decent &lt;strong&gt;QA force available&lt;/strong&gt; to us which could quickly test the new changes.&lt;/p&gt;

&lt;p&gt;And as the time progressed who found developers were writing less and less Unit test and the situation deteriorated to such a level the they stopped writing Unit Tests.&lt;/p&gt;

&lt;p&gt;We did spend some time in project retrospective on this problem and here
are the lesson we learned from this project:&lt;/p&gt;

&lt;h2 id=&quot;1-do-not-be-obsessed-with-100-code-coverage&quot;&gt;1. Do not be obsessed with 100% code coverage.&lt;/h2&gt;

&lt;p&gt;Now this is important. You can save lot of time when you know which part should be covered. For most people the answer to this puzzle is “Write tests for those parts which will block further development or App use”. Other say “Write test for those parts which has high probability of bugs” and the answer might be different for you. All i am saying is there is not point in writing test coverage for background color of screen.&lt;/p&gt;

&lt;h2 id=&quot;2-write-tests-when-api-are-being-developed-simultaneously&quot;&gt;2. Write tests when API are being developed simultaneously.&lt;/h2&gt;

&lt;p&gt;This is an area where Unit Testing is extremely useful and most of the time it happens that mobile developers are blocked because of APIs. In this time developers can write test cases if they know the response of API in advance and when APIs are available your code is ready to handle that and your Unit tests are written to catch any errors, therefore integrating APIs should be plug-and-play case for you.&lt;/p&gt;

&lt;h2 id=&quot;3-write-tests-for-edge-cases-and-time-consuming-tasks&quot;&gt;3. Write tests for edge cases and time consuming tasks.&lt;/h2&gt;

&lt;p&gt;If you have a good force of QAs available even then some edge cases need special attention because either they are difficult to reproduce or take time to reproduce therefore writing unit test cases of these edge cases saves considerable time.&lt;/p&gt;

&lt;h2 id=&quot;4-datetime-related-logic&quot;&gt;4. Date/Time related logic.&lt;/h2&gt;

&lt;p&gt;We find date related cases too frequently where you can only test it on specific day. For example if an event needs 2 days to finish or it happens on Monday only. There cases can be tested with Unit Testing to save time.&lt;/p&gt;

&lt;h2 id=&quot;5-do-not-abandon-test-cases-because-it-is-a-piece-of-code-too&quot;&gt;5. Do not abandon test cases because it is a piece of code too.&lt;/h2&gt;

&lt;p&gt;After all, Unit test is also a code which needs maintenance. If left unintended it will do more harm than good. So whenever you think writing Unit Tests is not in your interest, just think about your strategy and plan again.&lt;/p&gt;

&lt;p&gt;Unit testing is really a powerful tool, but using it properly is also very important.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
